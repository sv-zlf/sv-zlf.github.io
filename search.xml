<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Nordic nRF52840 入门学习</title>
      <link href="/NDN/2019-07-22-Nordic-nRF52840-%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/"/>
      <url>/NDN/2019-07-22-Nordic-nRF52840-%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="1-Board-Definition组"><a href="#1-Board-Definition组" class="headerlink" title="1.Board Definition组"></a>1.Board Definition组</h3><p>“ Board Definition”组中加入板卡定义文件“ boards.c”,该文件针对于具体板卡,主要要用来定义板卡的指示灯、按键、IO输出电压(仅nRFS2840具有此功能)以及常用的操作函数。对于Nordic nRF52840开发板(兼容 Nordic的PCA10056),设计了4个指示灯和按键,在“ boards.c”文件中,我们可以看到这些按键和指示灯的初始化函数以及一些基本功能如点亮、熄灭、翻转的操作函数。</p><p><img src="https://raw.githubusercontent.com/sv-zlf/img/master/20190722132825700.png"></p><h3 id="2-Board-Support组"><a href="#2-Board-Support组" class="headerlink" title="2.Board Support组"></a>2.Board Support组</h3><p>“ Board Support”组加入的是板卡支持包文件,即BSP文件,主要用于实现指示灯和按键的驱动。</p><img src="https://raw.githubusercontent.com/sv-zlf/img/master/2019072213292821.png"/><h3 id="3-UTF8-x2F-UTF16-converter-组"><a href="#3-UTF8-x2F-UTF16-converter-组" class="headerlink" title="3.UTF8&#x2F;UTF16 converter 组"></a>3.UTF8&#x2F;UTF16 converter 组</h3><p>“UTF8&#x2F;UTF16 converter”组只需加入一个实现UTF8&#x2F;UTF16编码转换的文件。<br><img src="https://raw.githubusercontent.com/sv-zlf/img/master/20190722133028225.png"></p><h3 id="4-NRF-BLE组"><a href="#4-NRF-BLE组" class="headerlink" title="4.NRF BLE组"></a>4.NRF BLE组</h3><p>“ NRF BLE”组加入的是BLE相关的库文件,如广播、连接参数协、配对管理等等。<br><img src="https://raw.githubusercontent.com/sv-zlf/img/master/20190722133359921.png"></p><h3 id="5-NRF-Drivers组"><a href="#5-NRF-Drivers组" class="headerlink" title="5.NRF Drivers组"></a>5.NRF Drivers组</h3><p>“ NRF Drivers”组加入的是各种外设的驱动库文件,如时钟、 GPOTE、UART等等。<br><img src="https://raw.githubusercontent.com/sv-zlf/img/master/20190722133511180.png"></p><h3 id="6-NRF-Libraries"><a href="#6-NRF-Libraries" class="headerlink" title="6.NRF Libraries"></a>6.NRF Libraries</h3><p>“ NRF Libraries”组加入的是各种应用的库文件,如APP定时器、CRC校验、软件FIFO、<br>简易文件系统以及错误处理等等。<br><img src="https://raw.githubusercontent.com/sv-zlf/img/master/20190722133727325.png"></p><h3 id="7-NRF-Log组"><a href="#7-NRF-Log组" class="headerlink" title="7.NRF Log组"></a>7.NRF Log组</h3><p>“ NRF Log”组中加入的文件如下表所示,Log程序模块为程序提供日志打印功能。<br><img src="https://raw.githubusercontent.com/sv-zlf/img/master/20190722134015959.png"></p><h3 id="8-NRF-Segger-RT组"><a href="#8-NRF-Segger-RT组" class="headerlink" title="8.NRF Segger_RT组"></a>8.NRF Segger_RT组</h3><p>nRF_ Segger_RTT”组中加入的文件如下表所示,它们的作用是实现 JLINK- RTT Viewer<br>作为Log输出终端,打印Log。<br><img src="https://raw.githubusercontent.com/sv-zlf/img/master/20190722134043479.png"></p><h3 id="9-NRE-Softdevice"><a href="#9-NRE-Softdevice" class="headerlink" title="9.NRE Softdevice"></a>9.NRE Softdevice</h3><p>“nRF_ Softdevice”组中加入的文件如下表所示,它们用于使能或禁止 Softdevice以及<br>向应用程序发布 Softdevice事件,功能如下:</p><p>(1)使能 Softdevice及其事件中断。</p><p>(2)禁止 Softdevice。</p><p>(3)从 Softdevice接收堆栈事件,并将它们转发给应用程序已注册的事件监查者。</p><p>(4)发送 Softdevice状态事件给应用程序和驱动。</p><p>(5)发送可由事件监查者接受或拒绝的SoftDevice状态请求。<br><img src="https://raw.githubusercontent.com/sv-zlf/img/master/20190722134839471.png"></p>]]></content>
      
      
      <categories>
          
          <category> NDN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nRF52840 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Turtle 3PA三轮小车基于pixhawk的改装（一）</title>
      <link href="/%E7%A7%91%E6%8A%80%E6%9D%82%E8%B0%88/2019-07-17-Turtle-3PA%E4%B8%89%E8%BD%AE%E5%B0%8F%E8%BD%A6%E5%9F%BA%E4%BA%8Epixhawk%E7%9A%84%E6%94%B9%E8%A3%85%E4%B9%8B%E5%87%86%E5%A4%87/"/>
      <url>/%E7%A7%91%E6%8A%80%E6%9D%82%E8%B0%88/2019-07-17-Turtle-3PA%E4%B8%89%E8%BD%AE%E5%B0%8F%E8%BD%A6%E5%9F%BA%E4%BA%8Epixhawk%E7%9A%84%E6%94%B9%E8%A3%85%E4%B9%8B%E5%87%86%E5%A4%87/</url>
      
        <content type="html"><![CDATA[<h1 id="Turtle-3PA三轮小车基于pixhawk的改装之准备"><a href="#Turtle-3PA三轮小车基于pixhawk的改装之准备" class="headerlink" title="Turtle 3PA三轮小车基于pixhawk的改装之准备"></a>Turtle 3PA三轮小车基于pixhawk的改装之准备</h1><p>今天在老师的指导下，对Arduino的小车进行改装，想要用pixhawk自动驾驶仪对小车进行控制。<br>工具准备：<br>（1）硬件<br>pixhawk控制板:</p><p><img src="https://raw.githubusercontent.com/sv-zlf/img/master/piwkwa.png"></p><p>Turtle 3PA三轮小车：</p><p><img src="https://raw.githubusercontent.com/sv-zlf/img/master/%E5%B0%8F%E8%BD%A6.png"></p><p>详细信息：<a href="http://www.dfrobot.com.cn/goods-1069.html">http://www.dfrobot.com.cn/goods-1069.html</a></p><p>乐迪at9s：</p><p><img src="https://raw.githubusercontent.com/sv-zlf/img/master/%E9%81%A5%E6%8E%A7%E5%99%A8.png"></p><p>（2）软件<br>Mission planner：</p><p><img src="https://raw.githubusercontent.com/sv-zlf/img/master/20190717163821441.png"></p><p>官网：<a href="http://ardupilot.org/planner/">http://ardupilot.org/planner/</a><br>QGround：</p><p><img src="https://raw.githubusercontent.com/sv-zlf/img/master/20190717164039773.png"></p><p>官网：<a href="http://qgroundcontrol.com/">http://qgroundcontrol.com/</a></p><p>两个地面站是为了刷飞控固件的方便，在对pixhawk飞控刷小车固件的时候总会出现Bad Ahrs，为了解决这个问题因此采用QGround。<br>具体的刷的方法在下个博客说明。</p>]]></content>
      
      
      <categories>
          
          <category> 科技杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pixhawk </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
